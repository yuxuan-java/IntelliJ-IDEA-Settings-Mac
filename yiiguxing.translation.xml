<application>
  <component name="AppStorage">
    <histories>
      <item value="ERR invalid password" />
      <item value="Redis Connection Failure Exception" />
      <item value="dist Cell" />
      <item value="src Cell" />
      <item value="get Physical Number Of Cells" />
      <item value="Returns the raw, underlying ooxml value for the cell * &lt;p&gt; * If the cell contains a string, then this value is an index into * the shared string table, pointing to the actual string value. Otherwise, * the value of the cell is expressed directly in this element. Cells containing formulas express * the last calculated result of the formula in this element." />
      <item value="get Raw Value" />
      <item value="Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data. This may indicate that the file is used to inflate memory usage and thus could pose a security risk. You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit. Counter: 370071, cis.counter: 3687, ratio: 0.009962953054954319 Limits: MIN_INFLATE_RATIO: 0.01" />
      <item value="Found interface org.apache.poi.util.POILogger, but class was expected" />
      <item value="Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data. This may indicate that the file is used to inflate memory usage and thus could pose a security risk. You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit. Counter: 371393, cis.counter: 3681, ratio: 0.00991133381620009 Limits: MIN_INFLATE_RATIO: 0.01" />
      <item value="Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data. This may indicate that the file is used to inflate memory usage and thus could pose a security risk. You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit." />
      <item value="This class wraps a {@link ZipFile} in order to check the * entries for &lt;a href=&quot;https://en.wikipedia.org/wiki/Zip_bomb&quot;&gt;zip bombs&lt;/a&gt; * while reading the archive. * If a {@link ZipInputStream} is directly used, the wrapper * can be applied via {@link #addThreshold(InputStream)}. * The alert limits can be globally defined via {@link #setMaxEntrySize(long)} * and {@link #setMinInflateRatio(double)}." />
      <item value="Zip Secure File" />
      <item value="Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data." />
      <item value="set Min Inflate Ratio" />
      <item value="Failed to read zip entry source" />
      <item value="Adds ability to generate builder for a class and switch between them. Switching between builder and source class is similar to 'Go To Test' action. Generated builder class does not use reflection, only setter methods or constructor. Usage:" />
      <item value="Plugin for quick navigation to url mapping declaration. Supported languages:" />
      <item value="The plugin provides 'Find External Usages' action which allows developers to quickly find plugins which use IntelliJ platform classes, methods or fields and 'Check external usages' option in 'Commit Changes' dialog which checks that changes in IntelliJ platform classes don't break external plugins." />
      <item value="time interval" />
      <item value="check creator" />
      <item value="county" />
      <item value="create time" />
      <item value="county id" />
      <item value="effct" />
      <item value="evaluate" />
      <item value="fact" />
      <item value="Compact" />
      <item value="ROW FORMAT" />
      <item value="reserve hour" />
      <item value="reserve end hour" />
      <item value="reserve start date" />
      <item value="start" />
      <item value="reserve" />
      <item value="reservation" />
      <item value="warehose" />
      <item value="Duplicate" />
      <item value="Duplicate entry '679' for key 'detail_shipping_id_2'" />
      <item value="Data Integrity Violation Exception" />
      <item value="UPPER CAMEL CASE" />
      <item value="Naming convention used in languages like Pascal, where words are capitalized * and no separator is used between words. * See {@link PascalCaseStrategy} for details." />
      <item value="Naming convention used in languages like C, where words are in lower-case * letters, separated by underscores. * See {@link SnakeCaseStrategy} for details." />
      <item value="Feature that determines whether Date (and date/time) values * (and Date-based things like {@link java.util.Calendar}s) are to be * serialized as numeric timestamps (true; the default), * or as something else (usually textual representation). * If textual representation is used, the actual format is * one returned by a call to * {@link com.fasterxml.jackson.databind.SerializationConfig#getDateFormat}: * the default setting being {@link com.fasterxml.jackson.databind.util.StdDateFormat}, * which corresponds to format String of &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot; * (see {@link java.text.DateFormat} for details of format Strings). *&lt;p&gt; * Note: whether this feature affects handling of other date-related * types depend on handlers of those types, although ideally they * should use this feature *&lt;p&gt; * Note: whether {@link java.util.Map} keys are serialized as Strings * or not is controlled using {@link #WRITE_DATE_KEYS_AS_TIMESTAMPS}. *&lt;p&gt; * Feature is enabled by default, so that date/time are by default * serialized as timestamps." />
      <item value="SNAKE CASE" />
      <item value="get Receipt Image Time" />
      <item value="shipping Receipt Service.find Bill Info(shipping Id,receipt Type)" />
      <item value="latitude From" />
      <item value="longitude From" />
      <item value="Cannot deserialize instance of `java.lang.String` out of START_OBJECT token" />
      <item value="Process terminated" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="299" />
        <entry key="ENGLISH" value="300" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="POLISH" value="2" />
        <entry key="DANISH" value="3" />
        <entry key="FRENCH" value="1" />
        <entry key="KURDISH" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="showExplanation" value="true" />
    <option name="showWordForms" value="false" />
    <option name="showWordsOnStartup" value="true" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
  </component>
</application>